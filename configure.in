dnl Process this file with autoconf to produce a configure script.
dnl This is the configuration file for the tango system.
dnl To process this file into a runnable shell-script, please run
dnl the script `bootstrap' which is found in the same directory as
dnl this file.

dnl For extensive help on autoconf, automake, and libtool, please
dnl consult the infofiles by running the `info' program, or by typing
dnl M-x info in your favourite editor (emacs)   

dnl For information on how to build and use an autoconfiscated
dnl project, please consult
dnl http://sources.redhat.com/autobook/autobook/autobook.html
dnl which is an online version of the Gnu Autoconf, Automake, and Libtool
dnl book by Vaughan, Elliston, Tromey, and Taylor

dnl What follows is the configuration, and comments to the macros used

dnl AC_INIT initializes autoconf, The first argument is the
dnl packagename, the second is the version used for the tar file,
dnl the third is an email address for bug reports (shouldn't be necessary),
dnl and the fourth argument is                
AC_INIT(Tango,8.0.0,tango@esrf.fr,tango)
AC_CONFIG_AUX_DIR(config)
AC_CONFIG_MACRO_DIR([m4])

dnl Tells autoconf that we want at least version 2.53 of autoconf to
dnl create configure from configure.in
AC_PREREQ(2.53)

AM_MAINTAINER_MODE()
AC_CANONICAL_HOST()

dnl Lets the revision tag from cvs or rcs propagate into the
dnl configure script, handy for debugging.
AC_REVISION($Revision$)	

dnl AM_INIT_AUTOMAKE sets up automake which is used to generate
dnl Makefile.in from Makefile.am
AM_INIT_AUTOMAKE($PACKAGE_TARNAME, $PACKAGE_VERSION)		

dnl Tells automake to use `ac_config.h.tmp' to stash all the #defines
dnl that result from a run of configure.
dnl The name is .tmp since I must change the PACKAGE_ definitions because    
dnl of omniORBS installation of their version of this file.
AC_CONFIG_HEADERS(ac_config.h.tmp)


dnl -version-info CURRENT[:REVISION[:AGE]]
dnl From the libtool documentation (info libtool)
dnl So, libtool library versions are described by three integers:

dnl CURRENT
dnl      The most recent interface number that this library implements.

dnl REVISION
dnl      The implementation number of the CURRENT interface.

dnl AGE
dnl      The difference between the newest and oldest interfaces that this
dnl      library implements.  In other words, the library implements all the
dnl      interface numbers in the range from number `CURRENT - AGE' to
dnl      `CURRENT'.

VERSION_INFO=8:0:0
	
dnl Checks for programs.
AC_PROG_CXX      dnl check for a c++ compiler
AC_PROG_CXXCPP   dnl check for a c++ preprocessor
AC_PROG_CPP	 dnl check for a c preprocessor
AC_PROG_AWK      dnl check for awk
AC_PROG_INSTALL  dnl check for an install program
AC_PROG_LN_S     dnl check if ln supports the -s switch
AC_PROG_MAKE_SET dnl check if make sets $(MAKE)


dnl Change ld and ar if we're using sunpro compiler
dnl Might as well disable static compiling on solaris
dnl since it doesn't work with sunpro at the moment.
    
RSSH_CHECK_SUNPRO_CC
if test "x$rssh_cv_check_sunpro_cc" = "xyes"; then
   AR="$CXX -xar"
   AR_FLAGS="-o"
   LD="$CXX -pta -G"
	AC_DISABLE_STATIC

else	 
 	if test "$CXX" = "c++" -o "$CXX" = "g++"
 	then
     	gcc_AC_HAVE_GCC_VERSION(3,2,0)
     	if test "x$ac_cv_gcc_version_3_2_0" = "xno"; then
         	AC_MSG_ERROR([Not supported gcc release. Should be 3.2.0 or above. Please update !],-1)
     	fi
 	fi
fi
  	 
dnl if test "$CXX" = "c++" -o "$CXX" = "g++"
dnl then
dnl     gcc_AC_HAVE_GCC_VERSION(3,2,0)
dnl     if test "x$ac_cv_gcc_version_3_2_0" = "xno"; then
dnl         AC_MSG_ERROR([Not supported gcc release. Should be 3.2.0 or above. Please update !],-1)
dnl     fi
dnl fi

dnl Check if Java interpreter is there

AC_ARG_ENABLE([java],AC_HELP_STRING([--enable-java],[enable installation of Java applications]),
[],[enable_java=yes])

AC_ARG_WITH([java], 
	AC_HELP_STRING([--with-java],[path to java interpreter]),
	[JAVA=${with_java}], [with_java=yes])
	
if test "x$enable_java" = "xyes" ; then
   if test "x$with_java" = "xno" -o -z "$with_java"; then
		with_java=
		enable_java=no
   else
		if test "x$with_java" = "xyes"; then
        AC_PATH_PROG(JAVA,java)
		fi  
      java_AC_HAVE_JAVA_VERSION($JAVA,1,6)
      if test "x$ac_cv_java_version_1_6" = "xno"; then
           AC_MSG_WARN([Not supported java release. Should be 1.6.x or above. Java will be disabled for this build!])
        	  with_java=
			  enable_java=no
		else
			with_java=$JAVA
		fi
   fi
else
   with_java=
fi

dnl Define a conditional variable to enable or disable installation
dnl of java applications. The variable is used in the Makefiles.
dnl
 
AM_CONDITIONAL(TANGO_JAVA_ENABLED, test x"$enable_java" != x"no")


dnl Check if doxygen is there

AC_ARG_WITH([doxygen], 
	AC_HELP_STRING([--with-doxygen],[path to doxygen utility]),
	[DOXYGEN=${with_doxygen}],
	[AC_PATH_PROG(DOXYGEN,doxygen)])
	
if test -z "$DOXYGEN"; then
	DOXYGEN=NOT_INSTALLED
fi
      

dnl Use libtool which facilitates the creation of shared libraries
LT_INIT()
	
dnl Checks for Python. Comment in if needed
dnl PGAC_PATH_PYTHON

dnl check for the presence of zlib
CHECK_ZLIB

dnl This macro checks for omniorb and sets various defines, please
dnl consult config/RSSH_CHECK_OMNIORB for more details        
RSSH_CHECK_OMNIORB  
enable_lib=yes

dnl This macro checks for omninotify and sets various defines, please
dnl consult m4/RSSH_CHECK_OMNINOTIFY for more details        
dnl RSSH_CHECK_OMNINOTIFY

dnl We abort the configuration if we haven't found a OMNINOTIFY_H file.	
dnl if test "x$OMNINOTIFY_H" = "x"
dnl then
dnl   AC_MSG_ERROR("Please install omniNotify or use --with-omniNotify to indicate its location")
dnl fi

dnl We need to define some stuff for threads and stubs

case $build_os in
     solaris*)
	AC_DEFINE(_POSIX_PTHREAD_SEMANTICS,1,"Needed for threads on solaris")
	CXXFLAGS="$CXXFLAGS -D_POSIX_PTHREAD_SEMANTICS"
	;;
     linux*)
	AC_DEFINE(_REENTRANT,1,"Needed for threads on Linux")
	CXXFLAGS="$CXXFLAGS -D_REENTRANT"
	;;
	darwin*)
	AC_DEFINE(_REENTRANT,1,"Needed for threads on darwin")
	CXXFLAGS="$CXXFLAGS -D_REENTRANT -D__darwin__"
	DARWIN=yes
esac	

dnl condition used in the Makefile of the Tango library
AM_CONDITIONAL(DARWIN_ENABLED,test x"$DARWIN" = x"yes" )


dnl we want to include the omniORB stubs into the tango library
CXXFLAGS="$CXXFLAGS -DOMNI_UNLOADABLE_STUBS"	   	


dnl checks for libdl
AC_CHECK_LIB(dl, dlopen)
dnl checks for libnsl
AC_CHECK_LIB(nsl, svc_pollfd)
dnl checks for libposix4
AC_CHECK_LIB(posix4, nanosleep)
dnl checks for  libpthread
AC_CHECK_LIB(pthread, pthread_create)
dnl checks for libsocket
AC_CHECK_LIB(socket, getprotobyname)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h strings.h sys/time.h unistd.h)

dnl Some hack for testing if we have sstream or not.			 
use_sstream=yes;
				 
if test "x$GCC" = "xyes"; then
        case `$CC --version 2>/dev/null` in
        [[12]].*) use_sstream=no ;;
        *)        use_sstream=yes ;;
        esac
fi 			 
if test "x$use_sstream" = "xyes"; then 
AC_CXX_HAVE_SSTREAM
fi
dnl This needs to be worked on!!

if test "x$use_sstream" = "xno"; then 
  AC_LANG_SAVE
  AC_LANG_CPLUSPLUS
  AC_CHECK_HEADER(strstream, AC_DEFINE(HAVE_STRSTREAM,1,""))
  AC_LANG_RESTORE
fi  		
dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_HEADER_MAJOR
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(gethostname gettimeofday exit tolower)
AC_CXX_HAVE_CLASS_STRSTREAM

dnl check for the presence of the mysql program, needed when doing the
dnl install of the DataBaseds server. You can tweak the connection
dnl with some --with variables. ./configure --help will, uhm, help you.

AC_ARG_ENABLE([dbserver],AC_HELP_STRING([--enable-dbserver],[enable installation of Tango database server]),
              [],[enable_dbserver=yes])
enable_db_schema_create=no

AC_ARG_WITH(tango-rc-file, AC_HELP_STRING([--with-tango-rc-file],[location of the tango rc file (default /etc/tangorc)]), TANGO_RC_FILE=${with_tango_rc_file}, TANGO_RC_FILE=/etc/tangorc)
AC_DEFINE_UNQUOTED(TANGO_RC_FILE, "$TANGO_RC_FILE", The tango rc file name and location)
AC_SUBST(TANGO_RC_FILE)

dnl Hacks to provide the name for the tango
dnl database. I havent found any other way to provide these arguments.
AC_ARG_WITH(tango-db-name, AC_HELP_STRING([--with-tango-db-name],[the name of the tango database (default tango)]), TANGO_DB_NAME=${with_tango_db_name}, TANGO_DB_NAME=tango)

dnl Here we define these constants so that they're reachable from c programs  
AC_DEFINE_UNQUOTED(TANGO_DB_NAME, "$TANGO_DB_NAME", The tango database name)
			
dnl Here we propagate the constants into the makefiles.
AC_SUBST(TANGO_DB_NAME)			

						
AS_IF([test "x$enable_dbserver" = "xyes"], [ 

	dnl We need libmysqlclient to compile
	dnl finds it for us. Abort if no mysqlclientlibs are found

	AM_PATH_MYSQLCLIENT
	if test "x$MYSQLCLIENT_CFLAGS" = "x"
		then
  		 	AC_MSG_WARN(No libmysqlclient_r libs found)
			enable_dbserver=no
		fi
	
	AC_PATH_PROG(MYSQL, mysql, nocommand)
	MYSQL_VERSION=not_found
	
	if test "$MYSQL" != nocommand; then
		mysql_AC_HAVE_MYSQL_VERSION($MYSQL,5,0)
		if test "x$ac_cv_mysql_version_5_0" = "xno"; then
		 	AC_MSG_WARN([Not supported mysql release. Should be 5.0.x or above. Please update !],-1)
			enable_db_schema_create=no
		else
			enable_db_schema_create=yes
		fi
	else
		enable_db_schema_create=no
	fi
 	

	dnl check for a database schema update
	
	AS_IF([test "x$enable_db_schema_create" = "xyes"], [
	
		AC_ARG_ENABLE([dbcreate],AC_HELP_STRING([--enable-dbcreate],[enable an creation of the Tango database schema]),
                 		[],[enable_dbcreate=yes])
		enable_db_schema_create=$enable_dbcreate
		 			  
		AS_IF([test "x$enable_db_schema_create" = "xyes"], [  
	
			AC_PROG_MYSQL

		])
	])
])


dnl
dnl Build the jpeg library compilation option
dnl

JPEG_LIB_CXXFLAGS=-D_TANGO_LIB
case $host_cpu in
	*86 )
	JPEG_LIB_CXXFLAGS="$JPEG_LIB_CXXFLAGS -DJPG_USE_ASM"
	;;
dnl	case $host_cpu in
dnl		*64 )
dnl		if test $enable_shared = no; then
dnl			JPEG_LIB_CXXFLAGS="$JPEG_LIB_CXXFLAGS -D_64BITS"
dnl		else
dnl			JPEG_LIB_CXXFLAGS="-D_TANGO_LIB -D_64BITS"
dnl		fi
dnl		;;
dnl	esac
	* )
	JPEG_LIB_CXXFLAGS="-D_TANGO_LIB -D_64BITS"
    ;;
esac

JPEG_MMX_LIB_CXXFLAGS="-D_TANGO_LIB"
case $host_cpu in
	*86 )
	case $build_os in
     linux*)
	JPEG_MMX_LIB_CXXFLAGS="$JPEG_MMX_LIB_CXXFLAGS -mmmx -DJPG_USE_ASM"
	;;
	darwin*)
	JPEG_MMX_LIB_CXXFLAGS="$JPEG_MMX_LIB_CXXFLAGS"
	esac
	;;
dnl	case $host_cpu in
dnl		*64 )
dnl		if test $enable_shared = no; then
dnl			JPEG_MMX_LIB_CXXFLAGS="$JPEG_MMX_LIB_CXXFLAGS -D_64BITS"
dnl		else
dnl			JPEG_MMX_LIB_CXXFLAGS="-D_TANGO_LIB -mmmx -D_64BITS"
dnl		fi
dnl		;;
dnl	esac
	powerpc )
	JPEG_MMX_LIB_CXXFLAGS="-D_TANGO_LIB"
	;;
	* )
	JPEG_MMX_LIB_CXXFLAGS="-D_TANGO_LIB -D_64BITS"
    ;;
esac

AC_SUBST(JPEG_LIB_CXXFLAGS)
AC_SUBST(JPEG_MMX_LIB_CXXFLAGS)

dnl Define a conditional variables to enable or disable installation
dnl of the database server and the database schema creation. 
dnl The variables are used in the Makefiles.
dnl

AM_CONDITIONAL(TANGO_DB_SERVER_ENABLED, test x"$enable_dbserver" = x"yes")
AM_CONDITIONAL(TANGO_DB_CREATE_ENABLED, test x"$enable_db_schema_create" = x"yes")
	
	
						   	
AC_SUBST(ac_aux_dir)	
AC_SUBST(VERSION_INFO)

DATADIR=`eval echo $datadir`
DATADIR=`eval echo $DATADIR`
AC_SUBST(DATADIR)

AC_SUBST(JAVA)
AC_SUBST(DOXYGEN)

dnl This is a hack to change PACKAGE_ #defines into TANGO_PACKAGE
AC_CONFIG_COMMANDS(ac_config.h,
		   sed s/PACKAGE/TANGO_PACKAGE/g <ac_config.h.tmp>ac_config.h)

dnl configure log4tango sub-package
AC_CONFIG_SUBDIRS(lib/cpp/log4tango)

dnl All the Makefiles to be generated.
AC_OUTPUT(Makefile
	  lib/Makefile
	  lib/idl/Makefile
	  lib/cpp/tango.pc
	  lib/cpp/Makefile
	  lib/cpp/server/Makefile
	  lib/cpp/server/idl/Makefile
	  lib/cpp/server/jpeg/Makefile
	  lib/cpp/server/jpeg_mmx/Makefile
	  lib/cpp/client/Makefile
	  lib/cpp/client/helpers/Makefile
	  lib/java/Makefile
	  cppserver/Makefile
	  cppserver/database/Makefile
	  cppserver/database/create_db.sql	
	  cppserver/database/create_db.sh
	  cppserver/database/my.cnf
	  cppserver/database/stored_proc.sql
	  cppserver/database/create_db_tables.sql
	  cppserver/database/update_db.sh
	  cppserver/database/update_db5.sql
	  cppserver/database/update_db6.sql
	  cppserver/starter/Makefile
  	  cppserver/tangotest/Makefile
	  cppserver/AbstractClass/Makefile
	  cppserver/AbstractClass/AccessControl/Makefile
	  cppserver/tangoaccesscontrol/Makefile
	  utils/Makefile
	  utils/notifd2db/Makefile
	  utils/tango_admin/Makefile
	  scripts/Makefile
	  scripts/tango
	  scripts/tango_wca
	  scripts/notify_daemon
  	  doc/Makefile
	  doc/man/Makefile
	  pogo/Makefile
	  pogo/templates/Makefile
	  pogo/preferences/Makefile
	  pogo/templates/cpp/Makefile)


AC_MSG_RESULT([
Configuration ($PACKAGE):

	Source code location:   ${srcdir}
	Version:                ${VERSION}
	Compiler:               ${ac_ct_CC},${ac_ct_CXX}

	OMNIORB PATH:           ${OMNI_ROOT} 
	OMNIORB VERSION:        ${OMNI_VERSION}
	
	JAVA PATH:              ${with_java}
	JAVA VERSION:           ${JAVA_VERSION}
		
	MYSQL CLIENT LIB:       ${MYSQLCLIENT_LDFLAGS} ${MYSQLCLIENT_LIBS}
	MYSQL VERSION:          ${MYSQL_VERSION}
	MYSQL CONNECTION:       ${MYSQL_CONNECTION}
		
build:
	libraries:              ${enable_lib}
	java application:       ${enable_java}
	access control server	${enable_dbserver}
	database server:        ${enable_dbserver}
	database schema create: ${enable_db_schema_create}
	
Please check whether the configuration I detected matches what you
would like to have.

])
